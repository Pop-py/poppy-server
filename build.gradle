plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.5'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'

	// Swagger
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

	// JWT
	implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
	runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

	// logging
	configurations.all {
		exclude group: 'commons-logging', module: 'commons-logging'
	}

	// QueryDSL
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// Gson
	implementation 'com.google.code.gson:gson'

	// Redission
	implementation group: 'org.redisson', name: 'redisson', version: '3.39.0'

	// Redis Connection
	implementation 'org.apache.commons:commons-pool2'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// FCM
	implementation 'com.google.firebase:firebase-admin:9.2.0'

	// JSON Serializer
	implementation 'com.fasterxml.jackson.core:jackson-databind'

	// AWS S3 SDK
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.566'

	// AWS SDK V2 (선택적, 더 최신 버전)
	implementation 'software.amazon.awssdk:s3:2.25.11'

	// 파일 업로드 지원
	implementation 'commons-fileupload:commons-fileupload:1.5'

	// 이미지 메타데이터 처리
	implementation 'com.drewnoakes:metadata-extractor:2.18.0'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

// QueryDSL Q클래스 생성 위치
def querydslDir = "src/main/generated"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.getGeneratedSourceOutputDirectory().set(file(querydslDir))
}

// clean 태스크 실행 시 생성된 Q클래스 삭제
clean {
	delete file(querydslDir)
}

tasks.named('test') {
	useJUnitPlatform()
}